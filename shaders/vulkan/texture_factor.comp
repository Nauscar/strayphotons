#version 430

layout(binding = 0, rgba8) uniform image2D texture;

layout(local_size_x = 16, local_size_y = 16) in;

layout(push_constant) uniform PushConstants {
	vec4 factor;
	int components;
	bool srgb;
};

const vec4[5] ComponentMask = vec4[](
	vec4(0.0, 0.0, 0.0, 0.0),
	vec4(1.0, 0.0, 0.0, 0.0),
	vec4(1.0, 1.0, 0.0, 0.0),
	vec4(1.0, 1.0, 1.0, 0.0),
	vec4(1.0, 1.0, 1.0, 1.0)
);

#include "../lib/util.glsl"

void main() {
	ivec2 texSize = imageSize(texture);
	ivec2 texCoord = ivec2(gl_GlobalInvocationID.xy);
	if (any(greaterThan(texCoord, texSize))) return;

	vec4 maskedFactor = ComponentMask[components] * factor;
	vec4 pixel = imageLoad(texture, texCoord);
	if (srgb) pixel.rgb = SRGBToLinear(pixel.rgb);
	pixel *= maskedFactor;
	if (srgb) pixel.rgb = LinearToSRGB(pixel.rgb);
	imageStore(texture, texCoord, pixel);
}
