#version 430

##import lib/util
##import voxel_shared

layout (local_size_x = 1) in;

layout (binding = 0, r32ui) uniform uimage3D voxelCounters;
layout (binding = 1, rgb10_a2ui) uniform uimage2D fragmentList;
layout (binding = 2, rgba16) uniform image3D voxelRadiance;

void main()
{
	// uint binIndex = gl_WorkGroupID.x + (gl_WorkGroupID.y * VOXEL_COMPUTE_SIZE) + (gl_WorkGroupID.z * VOXEL_COMPUTE_SIZE * VOXEL_COMPUTE_SIZE);
	// uint size = imageLoad(binCounters, ivec2(binIndex, 0)).r;

	// for (int i = 0; i < size; i++) {
	// 	ivec3 position = ivec3(imageLoad(fragmentList, ivec2(binIndex, i * 2)).xyz * 0xFFFF);
	// 	vec3 newRadiance = imageLoad(fragmentList, ivec2(binIndex, i * 2 + 1)).rgb;

	// 	vec4 radiance = imageLoad(voxelRadiance, position);
	// 	radiance = vec4(radiance.rgb, 1.0) * radiance.a + vec4(newRadiance, 1.0);
	// 	radiance.rgb /= radiance.a;

	// 	imageStore(voxelRadiance, position, radiance);
	// }

	// imageStore(binCounters, ivec2(binIndex, 0), uvec4(0));
}